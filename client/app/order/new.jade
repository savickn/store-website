title Secure Checkout

.container
  .row
    alert-message

  .row
    .col-lg-12
      form(name="orderForm" novalidate)
        wizard
          wz-step(wz-title="Shipping")
            h3 Shipping Address
            p Please select one of your saved addresses or specify a new address.

            ns-select-address(address="newOrder.shippingAddress" addresses="shippingAddresses" ng-if="shippingState === 'Select'")
            ns-add-address(address="newShippingAddress" cb-func="validateShipping(form, address, errors, submitted)" ng-if="shippingState === 'New'")

            md-button.md-raised(ng-click="setShippingState('New')" ng-show="shippingState === 'Select'") Add a New Address
            md-button.md-raised(ng-click="setShippingState('Select')" ng-show="shippingState !== 'Select'") Back

            md-button.md-raised(type="submit" wz-next ng-if="newOrder.shippingAddress | isNotEmpty" ng-click="clearAlert()") Continue

          wz-step(wz-title="Payment")
            h3 Choose a Payment Method
            p Please select one of your saved payment methods or specify a new method.

            ns-select-payment(payment="newOrder.paymentMethod" payments="paymentMethods" ng-if="paymentState === 'Select'")
            ns-add-payment(payment="newPayment" ng-if="paymentState === 'New'")

            md-button.md-raised(ng-click="setPaymentState('New')" ng-show="paymentState === 'Select'") Add a New Payment Method
            md-button.md-raised(ng-click="setPaymentState('Select')" ng-show="paymentState !== 'Select'") Back

            md-button.md-raised(type="submit" wz-next ng-if="newOrder.paymentMethod | isNotEmpty" ng-click="clearAlert()") Continue

          wz-step(wz-title="Billing")
            h3 Billing Address

            .form-group
              label(for="sameAsShipping") Same as Shipping Address?
              input.form-control(type="checkbox" name="sameAsShipping" ng-model="sameAsShipping" ng-change="setBillingAsShipping(sameAsShipping)")

            ns-add-address(address="newBillingAddress" cb-func="validateBilling(form, address, errors, submitted)" ng-if="billingState === 'New'")

            md-button.md-raised(ng-click="setBillingState('New')" ng-show="(billingState === 'Default') && !sameAsShipping") Add a New Address
            md-button.md-raised(ng-click="setBillingState('Default')" ng-show="billingState !== 'Default'") Back

            md-button.md-raised(type="submit" wz-next ng-if="newOrder.billingAddress | isNotEmpty" ng-click="getOrderInfo(newOrder); clearAlert()") Continue

          wz-step(wz-title="Review")
            p Please review all information before finalizing this order

            h4 Product Info
            ul.list-group
              li.list-group-item(ng-repeat="product in newOrder.products")
                p Product: {{product._name}}
                p Price: {{product._price}}

            h4 Payment Method
            ns-show-payment(payment="newOrder.paymentMethod")

            h4 Shipping Address
            ns-show-address(address="newOrder.shippingAddress")

            h4 Billing Address
            ns-show-address(address="newOrder.billingAddress")

            h4 Order Info
            p Subtotal: {{newOrder.subTotal}}
            p Tax: {{newOrder.tax}}
            p Shipping Costs: {{newOrder.shippingCost}}
            p Total: {{newOrder.total}}

            button.btn.btn-primary(ng-click="checkout(orderForm, newOrder)") Process Order





            //ns-show-address(address="newOrder.shippingAddress" ng-hide="newOrder.shippingAddress | isEmpty")

            //ns-show-address(address="newOrder.billingAddress")
            //ns-select-address(address="newOrder.billingAddress" addresses="shippingAddresses" type="Shipping")


            //
              .form-group(ng-class='{ "has-success": orderForm.country.$valid && submitted, "has-error": orderForm.country.$invalid && submitted}')
                label(for="country") Country
                select.form-control(name="country" ng-model="newOrder.shipping.country" ng-change="populateProvinces(newOrder.shipping.country)" required)
                  option(ng-repeat="country in countries" ng-value="country") {{country}}
                p.help-block(ng-show='orderForm.country.$error.required && submitted')
                  | Please select a country.

              .form-group(ng-class='{ "has-success": orderForm.province.$valid && submitted, "has-error": orderForm.province.$invalid && submitted}' ng-show="provinces.length > 0")
                label(for="province") Province
                select.form-control(name="province" ng-model="neworder.shipping.province" ng-change="populateCities(neworder.shipping.province)" required)
                  option(ng-repeat="province in provinces" ng-value="province") {{province}}
                p.help-block(ng-show='orderForm.province.$error.required && submitted')
                  | Please select a province.

              .form-group(ng-class='{ "has-success": orderForm.street.$valid && submitted, "has-error": orderForm.street.$invalid && submitted}')
                label(for="street") Street order
                input.form-control(type="text" name="street" placeholder="Please enter a street order." ng-model="neworder.shipping.street" required)
                p.help-block(ng-show='orderForm.street.$error.required && submitted')
                  | Please enter a street order.
                p.help-block(ng-show='orderForm.street.$error.mongoose')
                  | {{ errors.street }}

              .form-group(ng-class='{ "has-success": orderForm.city.$valid && submitted, "has-error": orderForm.city.$invalid && submitted}')
                label(for="city") City
                input.form-control(type="text" name="city" placeholder="Pleae enter a city." ng-model="newOrder.shipping.city" required)
                p.help-block(ng-show='orderForm.city.$error.required && submitted')
                  | Please enter a city.
                p.help-block(ng-show='orderForm.city.$error.mongoose')
                  | {{ errors.city }}

              .form-group(ng-class='{ "has-success": orderForm.pobox.$valid && submitted, "has-error": orderForm.pobox.$invalid && submitted}')
                label(for="pobox") PO Box (if applicable)
                input.form-control(type="text" name="pobox" placeholder="Pleae enter a PO Box number if applicable." ng-model="neworder.shipping.pobox")
                p.help-block(ng-show='orderForm.pobox.$error.mongoose')
                  | {{ errors.pobox }}

              .form-group(ng-class='{ "has-success": orderForm.aptNumber.$valid && submitted, "has-error": orderForm.aptNumber.$invalid && submitted}')
                label(for="aptNumber") Apartment Number (if applicable)
                input.form-control(type="text" name="aptNumber" placeholder="Pleae enter an apartment number if applicable." ng-model="neworder.shipping.aptNumber")
                p.help-block(ng-show='orderForm.aptNumber.$error.mongoose')
                  | {{ errors.aptNumber }}

              .form-group(ng-class='{ "has-success": orderForm.postalCode.$valid && submitted, "has-error": orderForm.postalCode.$invalid && submitted}')
                label(for="postalCode") Postal Code
                input.form-control(type="text" name="postalCode" placeholder="Pleae enter a postal code." ng-model="neworder.shipping.postalCode" pattern="[a-zA-Z]{1}[0-9]{1}[a-zA-Z]{1}(\s|-)?[0-9]{1}[a-zA-Z]{1}[0-9]{1}" mongoose-error='' required)
                p.help-block(ng-show='orderForm.postalCode.$error.required && submitted')
                  | Please enter a postal code.
                p.help-block(ng-show='orderForm.postalCode.$error.pattern && submitted')
                  | This postal code is not in the correct format. Please enter a postal code in the format 'A1A2B2'.
                p.help-block(ng-show='orderForm.postalCode.$error.mongoose')
                  | {{ errors.postalCode }}
